<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>theory on Relay Computer</title>
    <link>https://relaycomputer.co.uk/tags/theory.html</link>
    <description>Recent content in theory on Relay Computer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 06 Oct 2019 01:00:00 +0000</lastBuildDate><atom:link href="https://relaycomputer.co.uk/tags/theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Branching: Opcode Timing</title>
      <link>https://relaycomputer.co.uk/2019/10/branching-opcode-timing.html</link>
      <pubDate>Sun, 06 Oct 2019 01:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/10/branching-opcode-timing.html</guid>
      <description>In my last post I covered the design for the GOTO opcode which will enable my relay computer to perform branching, loops and so on. Here&amp;rsquo;s where I got to last time:</description>
    </item>
    
    <item>
      <title>Branching: Opcode Design</title>
      <link>https://relaycomputer.co.uk/2019/09/branching-opcode-design.html</link>
      <pubDate>Mon, 23 Sep 2019 01:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/09/branching-opcode-design.html</guid>
      <description>There&amp;rsquo;s been a common theme recently in the comments on my YouTube videos &amp;hellip; people are ready to see my relay computer gain the power of branching and become a &amp;lsquo;proper&amp;rsquo; computer &amp;hellip; and that&amp;rsquo;s fair enough because that&amp;rsquo;s the point where the computer can do way more interesting things and run more complicated programs.</description>
    </item>
    
    <item>
      <title>The problem with memory</title>
      <link>https://relaycomputer.co.uk/2017/08/the-problem-with-memory.html</link>
      <pubDate>Fri, 18 Aug 2017 22:58:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/08/the-problem-with-memory.html</guid>
      <description>It&amp;rsquo;s time, at last, to start looking at the design for the computer&amp;rsquo;s memory and this is a bit of a game changer as it&amp;rsquo;s the final part of the jigsaw that lets the computer run a program.</description>
    </item>
    
    <item>
      <title>Sequencing &amp; Control Design: Overview</title>
      <link>https://relaycomputer.co.uk/2014/09/sequencing-control-design-overview.html</link>
      <pubDate>Fri, 19 Sep 2014 23:27:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/09/sequencing-control-design-overview.html</guid>
      <description>I&amp;rsquo;ve now got my computer to a state where I can perform ALU operations and push values around the four registers by manually operating the various control lines.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Programming and Control 2</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and_7.html</link>
      <pubDate>Thu, 07 Nov 2013 23:22:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and_7.html</guid>
      <description>So, the last post didn&amp;rsquo;t quite wrap up this &amp;lsquo;mini-series&amp;rsquo; but hopefully this one will. Continuing on with how the Programming and Control of the computer happens here again, for the last time (really last time), is the architecture I&amp;rsquo;ll be building against (from the Harry Porter Relay Computer)</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Programming and Control</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and.html</link>
      <pubDate>Thu, 07 Nov 2013 21:54:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and.html</guid>
      <description>In this post I&amp;rsquo;ll wrap up this &amp;lsquo;mini-series&amp;rsquo; of trying to explain away the various bits of the architecture that will make up my relay computer project — finally now we come on to Programming and Control of the computer.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: the ALU</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-alu.html</link>
      <pubDate>Thu, 07 Nov 2013 07:24:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-alu.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s the Arithmetic Logic Unit (ALU).</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Memory</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-memory.html</link>
      <pubDate>Wed, 06 Nov 2013 20:14:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-memory.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s the memory.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Buses and Registers</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-buses-and.html</link>
      <pubDate>Tue, 05 Nov 2013 19:07:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-buses-and.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s buses and registers.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Binary</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-binary.html</link>
      <pubDate>Mon, 04 Nov 2013 10:35:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-binary.html</guid>
      <description>&amp;hellip; and it all begins with binary. Binary is a &amp;lsquo;base 2&amp;rsquo; numbering system which means it uses the numbers 0 and 1. In contrast humans tend to use decimal (base 10) for their day-to-day numerical needs which, of course, uses the numbers 0 to 9.</description>
    </item>
    
  </channel>
</rss>
