<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A blog about a computer made from relays on Relay Computer</title>
    <link>https://relaycomputer.co.uk/</link>
    <description>Recent content in A blog about a computer made from relays on Relay Computer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 01 Feb 2020 03:03:00 +0000</lastBuildDate><atom:link href="https://relaycomputer.co.uk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2020 Update</title>
      <link>https://relaycomputer.co.uk/2020/02/twenty-twenty-update.html</link>
      <pubDate>Sat, 01 Feb 2020 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2020/02/twenty-twenty-update.html</guid>
      <description>As the clock struck midnight at the very end of 2019 I decided, over a glass of something sparkling, that I&amp;rsquo;d set myself a challenge to put out a series of six YouTube videos within the space of one month.</description>
    </item>
    
    <item>
      <title>Decoder Construction</title>
      <link>https://relaycomputer.co.uk/2020/01/decoder-construction.html</link>
      <pubDate>Sun, 05 Jan 2020 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2020/01/decoder-construction.html</guid>
      <description>In my last post I covered off the full design for the decoder card so all that remains is to get it soldered up and tested.</description>
    </item>
    
    <item>
      <title>Decoder Design: Schematic &amp; PCBs</title>
      <link>https://relaycomputer.co.uk/2019/12/decoder-design-pcb.html</link>
      <pubDate>Sun, 22 Dec 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/12/decoder-design-pcb.html</guid>
      <description>I&amp;rsquo;ve almost got everything I need now to get my relay computer to do branching. The hard work of designing and constructing the sequencer and controller units is complete and both units can perform a GOTO operation.</description>
    </item>
    
    <item>
      <title>Controller Construction</title>
      <link>https://relaycomputer.co.uk/2019/12/controller-construction.html</link>
      <pubDate>Sat, 21 Dec 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/12/controller-construction.html</guid>
      <description>In my last couple of posts I covered off the full design for the controller unit. As the PCBs have now arrived I can get on with soldering up the cards and giving them a test.</description>
    </item>
    
    <item>
      <title>Controller Design: Schematic &amp; PCBs</title>
      <link>https://relaycomputer.co.uk/2019/12/controller-design-pcb.html</link>
      <pubDate>Fri, 20 Dec 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/12/controller-design-pcb.html</guid>
      <description>In my last couple of posts I finalised the controller schematic designs for the ALU, SETAB, MOV8 and GOTO class of instructions. Now it&amp;rsquo;s time to bring all those schematics together and design the two controller PCBs.</description>
    </item>
    
    <item>
      <title>Controller Design: ALU, MOV8 &amp; SETAB Instructions</title>
      <link>https://relaycomputer.co.uk/2019/12/controller-alu-mov8-setab-design.html</link>
      <pubDate>Sat, 07 Dec 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/12/controller-alu-mov8-setab-design.html</guid>
      <description>In my last post I covered off the controller design for the GOTO instruction. Being as I&amp;rsquo;ve decided to implement the controller on a new set of PCB cards I need to transfer over the existing ALU, MOV8 &amp;amp; SETAB instructions to the new controller design.</description>
    </item>
    
    <item>
      <title>Controller Design: GOTO Instruction</title>
      <link>https://relaycomputer.co.uk/2019/11/controller-goto-design.html</link>
      <pubDate>Sat, 30 Nov 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/11/controller-goto-design.html</guid>
      <description>With the sequencer now designed and constructed I&amp;rsquo;m much closer to getting branching working on my relay computer. The next hurdle is updating the controller cards so that they can fire the appropriate control lines at the right time as directed by the sequencer pulses.</description>
    </item>
    
    <item>
      <title>Sequencer Construction</title>
      <link>https://relaycomputer.co.uk/2019/11/sequencer-construction.html</link>
      <pubDate>Wed, 20 Nov 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/11/sequencer-construction.html</guid>
      <description>In my last couple of posts I covered off the full design for the sequencer unit. With PCBs now safely arrived in the post I can get on with soldering up the cards and giving them a test.</description>
    </item>
    
    <item>
      <title>Sequencer Design: Schematic &amp; PCBs</title>
      <link>https://relaycomputer.co.uk/2019/11/sequencer-design-pcb.html</link>
      <pubDate>Mon, 11 Nov 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/11/sequencer-design-pcb.html</guid>
      <description>I&amp;rsquo;ve got the designs for the 24-cycle FSM and pulse distribution in place so all that&amp;rsquo;s left for the sequencer is to bring the schematics together and then design the PCBs &amp;hellip; and yup, that&amp;rsquo;s PCBs plural as this is going to be another part of the computer that is complicated enough to need spreading over two interconnected cards.</description>
    </item>
    
    <item>
      <title>Sequencer Design: Pulse Distribution</title>
      <link>https://relaycomputer.co.uk/2019/11/sequencer-design-pulse-dist.html</link>
      <pubDate>Sat, 02 Nov 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/11/sequencer-design-pulse-dist.html</guid>
      <description>In my last post I extended the 8-cycle FSM (finite state machine) design all the way up to 24-cycles so that we can run longer and more complicated instructions.</description>
    </item>
    
    <item>
      <title>Sequencer Design: 24-cycle FSM</title>
      <link>https://relaycomputer.co.uk/2019/11/sequencer-design-24-cycle-fsm.html</link>
      <pubDate>Fri, 01 Nov 2019 03:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/11/sequencer-design-24-cycle-fsm.html</guid>
      <description>Recently I&amp;rsquo;ve been looking at what&amp;rsquo;s needed to implement branching in my computer (the upcoming GOTO class of instructions). In my last post I covered the timing chart for the GOTO class which is repeated below:</description>
    </item>
    
    <item>
      <title>Branching: Opcode Timing</title>
      <link>https://relaycomputer.co.uk/2019/10/branching-opcode-timing.html</link>
      <pubDate>Sun, 06 Oct 2019 01:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/10/branching-opcode-timing.html</guid>
      <description>In my last post I covered the design for the GOTO opcode which will enable my relay computer to perform branching, loops and so on. Here&amp;rsquo;s where I got to last time:</description>
    </item>
    
    <item>
      <title>Branching: Opcode Design</title>
      <link>https://relaycomputer.co.uk/2019/09/branching-opcode-design.html</link>
      <pubDate>Mon, 23 Sep 2019 01:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/09/branching-opcode-design.html</guid>
      <description>There&amp;rsquo;s been a common theme recently in the comments on my YouTube videos &amp;hellip; people are ready to see my relay computer gain the power of branching and become a &amp;lsquo;proper&amp;rsquo; computer &amp;hellip; and that&amp;rsquo;s fair enough because that&amp;rsquo;s the point where the computer can do way more interesting things and run more complicated programs.</description>
    </item>
    
    <item>
      <title>16-bit Register PCB Design</title>
      <link>https://relaycomputer.co.uk/2019/08/16bit-register-pcb-design.html</link>
      <pubDate>Fri, 09 Aug 2019 01:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/08/16bit-register-pcb-design.html</guid>
      <description>It&amp;rsquo;s time for the oddly therapeutic part of designing a PCB &amp;hellip; laying out the board. In my last post I covered the schematic design and so we now have all the components required for a 16-bit register captured in my design program of choice (EasyEDA) along with how each component is connected to everything else.</description>
    </item>
    
    <item>
      <title>16-bit Register Design</title>
      <link>https://relaycomputer.co.uk/2019/07/16bit-register-design.html</link>
      <pubDate>Mon, 15 Jul 2019 11:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/07/16bit-register-design.html</guid>
      <description>In my last couple of posts I&amp;rsquo;ve been building up to a change of approach in how I&amp;rsquo;m making the cards in my computer. This is mainly because I can&amp;rsquo;t face the monotony of hand building the upcoming register cards (which I&amp;rsquo;ll need three of so it&amp;rsquo;s triple the procrastination holding me back).</description>
    </item>
    
    <item>
      <title>Making a PCB</title>
      <link>https://relaycomputer.co.uk/2019/03/making-a-pcb.html</link>
      <pubDate>Mon, 04 Mar 2019 11:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/03/making-a-pcb.html</guid>
      <description>After years of using pad/prototyping boards to build my computer I&amp;rsquo;ve decided to switch things up a bit and have a go at making a custom PCB.</description>
    </item>
    
    <item>
      <title>A change of approach</title>
      <link>https://relaycomputer.co.uk/2019/01/change-of-approach.html</link>
      <pubDate>Mon, 14 Jan 2019 11:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/01/change-of-approach.html</guid>
      <description>In my last post I touched on how the repetitive nature of making register cards has been putting me off progressing my relay computer. If you&amp;rsquo;ve followed my blog (over the years) you&amp;rsquo;ll have witnessed the construction of the general purpose registers A, B, C and D along with the specialised registers in the incrementer and program counter.</description>
    </item>
    
    <item>
      <title>Procrastination is the thief of time</title>
      <link>https://relaycomputer.co.uk/2019/01/procrastination-is.html</link>
      <pubDate>Sun, 06 Jan 2019 11:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2019/01/procrastination-is.html</guid>
      <description>&amp;hellip; or so the proverb goes &amp;hellip; and it&amp;rsquo;s fair to say I&amp;rsquo;ve been procrastinating quite a bit recently.
I typically take a summer break from working on the relay computer so that I can service all the other hobbies I have on the go but also to enjoy the brief warm weather we get here in the UK.</description>
    </item>
    
    <item>
      <title>Auxiliary Control Construction</title>
      <link>https://relaycomputer.co.uk/2018/03/auxiliary-control-construction.html</link>
      <pubDate>Tue, 27 Mar 2018 22:07:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/03/auxiliary-control-construction.html</guid>
      <description>In my last three posts I covered the design of the auxiliary control unit which will ease entering and inspecting programs in the computer’s memory. With the design ‘in the bag’ it’s time to get constructing although this time we’re not starting with a blank card …</description>
    </item>
    
    <item>
      <title>Auxiliary Control Design (Part 3 of 3)</title>
      <link>https://relaycomputer.co.uk/2018/02/auxiliary-control-design-part-3-of-3.html</link>
      <pubDate>Wed, 07 Feb 2018 22:07:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/02/auxiliary-control-design-part-3-of-3.html</guid>
      <description>This is the last post in a mini-series of three covering the design of the auxiliary control unit which will ease entering and inspecting programs in the computer&amp;rsquo;s memory.</description>
    </item>
    
    <item>
      <title>Auxiliary Control Design (Part 2 of 3)</title>
      <link>https://relaycomputer.co.uk/2018/01/auxiliary-control-design-part-2-of-3.html</link>
      <pubDate>Mon, 29 Jan 2018 22:12:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/01/auxiliary-control-design-part-2-of-3.html</guid>
      <description>In my last post I made a start on the auxiliary control design which once completed will make it much easier to load instructions in to memory - effectively it&amp;rsquo;s a computer within a computer.</description>
    </item>
    
    <item>
      <title>Auxiliary Control Design (Part 1 of 3)</title>
      <link>https://relaycomputer.co.uk/2018/01/auxiliary-control-design-part-1-of-3.html</link>
      <pubDate>Wed, 24 Jan 2018 21:24:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/01/auxiliary-control-design-part-1-of-3.html</guid>
      <description>My relay computer is now at the point where it can execute a program in memory without assistance. In order to do that though, of course, the program needs to be loaded into memory in the first place and at the moment that&amp;rsquo;s a bit of a pain.</description>
    </item>
    
    <item>
      <title>Fetch and Increment - Construction and Test</title>
      <link>https://relaycomputer.co.uk/2018/01/fetch-and-increment-construction-and.html</link>
      <pubDate>Tue, 16 Jan 2018 22:16:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/01/fetch-and-increment-construction-and.html</guid>
      <description>This is a bit of a landmark moment &amp;hellip; at least for the construction of my relay computer. For a long time now my blog posts have been leading up to the point where my computer will execute a program in memory without any further input from the user.</description>
    </item>
    
    <item>
      <title>Incrementer Test</title>
      <link>https://relaycomputer.co.uk/2018/01/incrementer-test.html</link>
      <pubDate>Sun, 07 Jan 2018 13:04:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2018/01/incrementer-test.html</guid>
      <description>In my last two posts I covered the construction of the upper and lower incrementer cards. The lower card is a 16-bit half adder and the upper card is a 16-bit register.</description>
    </item>
    
    <item>
      <title>Incrementer Construction (Part 2 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/12/incrementer-construction-part-2-of-2.html</link>
      <pubDate>Sun, 17 Dec 2017 12:32:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/12/incrementer-construction-part-2-of-2.html</guid>
      <description>In my last post I covered the construction of the lower incrementer card which is effectively a 16-bit half adder. This time I&amp;rsquo;m going to cover constructing the upper card of the incrementer which is a 16-bit register that can hold on to the incremented value before pushing it back out to the address bus.</description>
    </item>
    
    <item>
      <title>Incrementer Construction (Part 1 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/12/incrementer-construction-part-1-of-2.html</link>
      <pubDate>Sun, 10 Dec 2017 11:07:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/12/incrementer-construction-part-1-of-2.html</guid>
      <description>We&amp;rsquo;re getting nearer and nearer to a computer that can run though a program in memory rather than just a single instruction &amp;hellip; we&amp;rsquo;ve got memory to hold the program and a program counter to point to the current instruction in memory.</description>
    </item>
    
    <item>
      <title>Memory Test</title>
      <link>https://relaycomputer.co.uk/2017/11/memory-test.html</link>
      <pubDate>Thu, 30 Nov 2017 21:15:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/11/memory-test.html</guid>
      <description>I&amp;rsquo;ve covered the construction of the upper and lower memory cards in my last two posts &amp;hellip; it&amp;rsquo;s now time to bring those two cards together to form the memory unit proper and give it all a test.</description>
    </item>
    
    <item>
      <title>Memory Construction (Part 2 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/11/memory-construction-part-2-of-2.html</link>
      <pubDate>Sat, 25 Nov 2017 16:52:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/11/memory-construction-part-2-of-2.html</guid>
      <description>In my last post I made a start on the memory unit construction with the lower memory card. The lower card centres around the memory IC which runs at 5V.</description>
    </item>
    
    <item>
      <title>Memory Construction (Part 1 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/11/memory-construction-part-1-of-2.html</link>
      <pubDate>Sun, 19 Nov 2017 14:53:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/11/memory-construction-part-1-of-2.html</guid>
      <description>It&amp;rsquo;s time to make a start on the construction of the memory unit and as mentioned in my last post this one is a bit more complex than &amp;lsquo;boring old registers&amp;rsquo; and so I&amp;rsquo;ll split it over two posts.</description>
    </item>
    
    <item>
      <title>Program Counter Construction</title>
      <link>https://relaycomputer.co.uk/2017/11/program-counter-construction.html</link>
      <pubDate>Sat, 11 Nov 2017 10:25:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/11/program-counter-construction.html</guid>
      <description>In my last couple of posts I&amp;rsquo;ve been slightly distracted by some &amp;lsquo;miscellany&amp;rsquo; but now I return to form and crack on with constructing the program counter.</description>
    </item>
    
    <item>
      <title>Miscellany Special: Backplane X, Cable Routing and Address Bus</title>
      <link>https://relaycomputer.co.uk/2017/11/miscellany-special-backplane-x-cable.html</link>
      <pubDate>Sun, 05 Nov 2017 10:47:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/11/miscellany-special-backplane-x-cable.html</guid>
      <description>Continuing on with the theme from my last post &amp;hellip; here is another &amp;lsquo;miscellany special&amp;rsquo; covering all the little &amp;lsquo;side jobs&amp;rsquo; I&amp;rsquo;ve been doing on my relay computer alongside the primary work of constructing the Program Counter, Memory and Incrementer cards.</description>
    </item>
    
    <item>
      <title>Miscellany Special: Power Distribution</title>
      <link>https://relaycomputer.co.uk/2017/10/miscellany-special-power-distribution.html</link>
      <pubDate>Sun, 29 Oct 2017 11:01:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/10/miscellany-special-power-distribution.html</guid>
      <description>Having somehow forgotten to take time off work I&amp;rsquo;m now playing &amp;lsquo;annual leave catch up&amp;rsquo; which means lots of four day weeks but also, and more importantly for this blog, I&amp;rsquo;m getting time to crack on with construction of my relay computer.</description>
    </item>
    
    <item>
      <title>Control Design: Fetch and Increment</title>
      <link>https://relaycomputer.co.uk/2017/09/control-design-fetch-and-increment.html</link>
      <pubDate>Sun, 17 Sep 2017 12:57:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/09/control-design-fetch-and-increment.html</guid>
      <description>The design of the computer&amp;rsquo;s memory, incrementer and program counter are now complete but there&amp;rsquo;s one last piece of the &amp;lsquo;puzzle&amp;rsquo; required to get the computer running a program.</description>
    </item>
    
    <item>
      <title>Memory Design (Part 2 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/09/memory-design-part-2-of-2.html</link>
      <pubDate>Wed, 06 Sep 2017 22:55:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/09/memory-design-part-2-of-2.html</guid>
      <description>In my last post I started the design for the computer&amp;rsquo;s memory unit which is spread over two cards. With the lower memory card design in place its now time to finish the job and design the upper card which will interface the rest of the computer with the memory chip of the lower card.</description>
    </item>
    
    <item>
      <title>Memory Design (Part 1 of 2)</title>
      <link>https://relaycomputer.co.uk/2017/09/memory-design-part-1-of-2.html</link>
      <pubDate>Sun, 03 Sep 2017 22:35:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/09/memory-design-part-1-of-2.html</guid>
      <description>In my last post I explained my decision to use a &amp;lsquo;modern&amp;rsquo; memory chip in my relay computer &amp;hellip; I also alluded to there being some complexities in interfacing the rest of the computer with that memory chip.</description>
    </item>
    
    <item>
      <title>The problem with memory</title>
      <link>https://relaycomputer.co.uk/2017/08/the-problem-with-memory.html</link>
      <pubDate>Fri, 18 Aug 2017 22:58:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/08/the-problem-with-memory.html</guid>
      <description>It&amp;rsquo;s time, at last, to start looking at the design for the computer&amp;rsquo;s memory and this is a bit of a game changer as it&amp;rsquo;s the final part of the jigsaw that lets the computer run a program.</description>
    </item>
    
    <item>
      <title>More Laser Cut Parts</title>
      <link>https://relaycomputer.co.uk/2017/08/more-laser-cut-parts.html</link>
      <pubDate>Sun, 06 Aug 2017 13:13:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/08/more-laser-cut-parts.html</guid>
      <description>I&amp;rsquo;ve nearly got the design for the memory cards done and ready to share but once that&amp;rsquo;s out the way it&amp;rsquo;ll be time to get on with some construction again.</description>
    </item>
    
    <item>
      <title>Incrementer Design</title>
      <link>https://relaycomputer.co.uk/2017/07/incrementer-design.html</link>
      <pubDate>Mon, 17 Jul 2017 21:34:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/07/incrementer-design.html</guid>
      <description>In my last post I covered the design of the 16-bit half adder which takes whatever value is currently on the address bus and increments it by one.</description>
    </item>
    
    <item>
      <title>Incrementer Design: 16-bit Half Adder</title>
      <link>https://relaycomputer.co.uk/2017/07/incrementer-design-16-bit-half-adder.html</link>
      <pubDate>Sat, 15 Jul 2017 14:57:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/07/incrementer-design-16-bit-half-adder.html</guid>
      <description>In the last post I introduced the design for the 1-bit Half Adder. This post covers connecting sixteen of these units together to make the 16-bit Half Adder.</description>
    </item>
    
    <item>
      <title>Incrementer Design: 1-bit Half Adder</title>
      <link>https://relaycomputer.co.uk/2017/06/incrementer-design-1-bit-half-adder.html</link>
      <pubDate>Sun, 04 Jun 2017 22:42:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/06/incrementer-design-1-bit-half-adder.html</guid>
      <description>Typical isn&amp;rsquo;t it?! &amp;hellip; you wait 10 months for a post and then two come along at once. Well, all being well, this should be the first of a short flurry of posts as I move on to the design of the incrementer.</description>
    </item>
    
    <item>
      <title>Register Design: Program Counter</title>
      <link>https://relaycomputer.co.uk/2017/05/register-design-program-counter.html</link>
      <pubDate>Mon, 29 May 2017 17:13:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2017/05/register-design-program-counter.html</guid>
      <description>It&amp;rsquo;s been a while since my last post &amp;hellip; pretty much 10 months in fact &amp;hellip; and I&amp;rsquo;d love to say I&amp;rsquo;ve been quietly working on my relay computer in the meantime but I haven&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>Yet another diversion</title>
      <link>https://relaycomputer.co.uk/2016/07/yet-another-diversion.html</link>
      <pubDate>Sun, 24 Jul 2016 22:13:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2016/07/yet-another-diversion.html</guid>
      <description>It&amp;rsquo;s been a bit quiet on the relay computer front again for a while &amp;hellip; well it is summer after all and there&amp;rsquo;s no point staying inside the house tending to my hobbies when I can be running around outside getting sunburnt.</description>
    </item>
    
    <item>
      <title>Sequencing &amp; Control Test</title>
      <link>https://relaycomputer.co.uk/2016/05/sequencing-control-test.html</link>
      <pubDate>Tue, 24 May 2016 21:12:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2016/05/sequencing-control-test.html</guid>
      <description>It&amp;rsquo;s finally time to give all the cards created so far a test so I can check everything works together as expected. This represents quite a bit of a milestone as the computer can now perform a single ALU, SETAB or MOV-8 instruction.</description>
    </item>
    
    <item>
      <title>W Backplane Construction &amp; Power Distribution</title>
      <link>https://relaycomputer.co.uk/2016/04/w-backplane-construction-power.html</link>
      <pubDate>Mon, 11 Apr 2016 21:07:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2016/04/w-backplane-construction-power.html</guid>
      <description>Before I can test the new decoder, sequencer and controller cards all working together with the rest of the computer I need to construct the &amp;lsquo;W&amp;rsquo; backplane which the new cards sit on.</description>
    </item>
    
    <item>
      <title>User Interface Construction: Instruction, Clock and Sequencer</title>
      <link>https://relaycomputer.co.uk/2016/03/user-interface-construction-instruction.html</link>
      <pubDate>Tue, 29 Mar 2016 22:38:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2016/03/user-interface-construction-instruction.html</guid>
      <description>Well, the good news is I&amp;rsquo;ve just passed a major milestone in constructing this relay computer &amp;hellip; it can now perform a single instruction in full firing the various control lines as needed.</description>
    </item>
    
    <item>
      <title>Controller Construction: MOV-8, ALU and SETAB</title>
      <link>https://relaycomputer.co.uk/2016/01/controller-construction-mov-8-alu-and.html</link>
      <pubDate>Fri, 01 Jan 2016 23:23:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2016/01/controller-construction-mov-8-alu-and.html</guid>
      <description>So yea, it&amp;rsquo;s been a while since my last post &amp;hellip; in fact it&amp;rsquo;s been just over six months. For some reason I decided I didn&amp;rsquo;t have enough to do in the evenings so had a crack at becoming an actuary.</description>
    </item>
    
    <item>
      <title>Sequencer Construction: 8-cycle FSM</title>
      <link>https://relaycomputer.co.uk/2015/07/sequencer-construction-8-cycle-fsm.html</link>
      <pubDate>Wed, 08 Jul 2015 09:27:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/07/sequencer-construction-8-cycle-fsm.html</guid>
      <description>I&amp;rsquo;m just about at the half way mark now for getting the computer to operate the MOV8, ALU and SETAB instructions. The easier cards are out of the way now &amp;hellip; time for the slightly more complex ones.</description>
    </item>
    
    <item>
      <title>Decoder Construction: MOV-8, ALU &amp; SETAB</title>
      <link>https://relaycomputer.co.uk/2015/06/decoder-construction-mov-8-alu-setab.html</link>
      <pubDate>Sun, 07 Jun 2015 21:43:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/06/decoder-construction-mov-8-alu-setab.html</guid>
      <description>In a change from prior form I&amp;rsquo;m combining the construction and testing of the next card in to a single post this time. Partly because this card is a nice easy one but also because it&amp;rsquo;s the first card that I&amp;rsquo;ll be partially constructing to begin with and then I&amp;rsquo;ll return to it later to add further functionality.</description>
    </item>
    
    <item>
      <title>Register Construction: Completed Instruction Register Full Test</title>
      <link>https://relaycomputer.co.uk/2015/05/register-construction-completed.html</link>
      <pubDate>Sat, 16 May 2015 10:19:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/05/register-construction-completed.html</guid>
      <description>Following on from my last post, and after popping in some relays, the instruction register is complete and looks like this:
{% figure %} {% endfigure %}</description>
    </item>
    
    <item>
      <title>Register Construction: Instruction Register</title>
      <link>https://relaycomputer.co.uk/2015/05/register-construction-instruction.html</link>
      <pubDate>Sat, 09 May 2015 20:01:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/05/register-construction-instruction.html</guid>
      <description>There&amp;rsquo;s been lots of theory going on in my recent posts but the time for design is over (for now) &amp;hellip; it&amp;rsquo;s time to get constructing.</description>
    </item>
    
    <item>
      <title>New Workbench</title>
      <link>https://relaycomputer.co.uk/2015/05/new-workbench.html</link>
      <pubDate>Mon, 04 May 2015 11:19:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/05/new-workbench.html</guid>
      <description>Those who have been reading my posts and watching my videos (you have my sympathy) will know that alongside constructing this computer I&amp;rsquo;ve also been busy renovating a house I bought almost a year ago.</description>
    </item>
    
    <item>
      <title>User Interface Design: Instruction, Clock and Sequencer</title>
      <link>https://relaycomputer.co.uk/2015/04/user-interface-design-instruction-clock.html</link>
      <pubDate>Wed, 08 Apr 2015 23:19:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/04/user-interface-design-instruction-clock.html</guid>
      <description>Over my last seven posts I&amp;rsquo;ve been slowly putting together the card designs so that the computer will be able to operate the MOV-8, ALU and SETAB instructions.</description>
    </item>
    
    <item>
      <title>Control Design: MOV-8, ALU and SETAB (part 2 of 2)</title>
      <link>https://relaycomputer.co.uk/2015/04/control-design-mov-8-alu-and-setab-part.html</link>
      <pubDate>Sat, 04 Apr 2015 08:06:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/04/control-design-mov-8-alu-and-setab-part.html</guid>
      <description>In part one of this two part post I introduced the design of the control relays for each of the MOV-8, ALU and SETAB instructions. With these in hand I can now move on to placing these on the control cards and wire everything together.</description>
    </item>
    
    <item>
      <title>Control Design: MOV-8, ALU and SETAB (part 1 of 2)</title>
      <link>https://relaycomputer.co.uk/2015/03/control-design-mov-8-alu-and-setab-part.html</link>
      <pubDate>Tue, 31 Mar 2015 22:26:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/03/control-design-mov-8-alu-and-setab-part.html</guid>
      <description>Over the last five posts I&amp;rsquo;ve been building up the design of a set of cards so that the computer will be able to understand and perform the MOV-8, ALU and SETAB instructions.</description>
    </item>
    
    <item>
      <title>Pulse Distribution Design: Pulses C,D and E</title>
      <link>https://relaycomputer.co.uk/2015/03/pulse-distribution-design-pulses-cd-and.html</link>
      <pubDate>Sun, 22 Mar 2015 13:58:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/03/pulse-distribution-design-pulses-cd-and.html</guid>
      <description>In my last post I covered the design of the 8-cycle finite state machine (FSM). In this post I&amp;rsquo;ll now take the outputs from that FSM and combine them to produce the timing pulses that will be needed to perform the MOV-8, ALU and SETAB instructions.</description>
    </item>
    
    <item>
      <title>Sequencer Design: 8-cycle FSM</title>
      <link>https://relaycomputer.co.uk/2015/01/sequencer-design-8-cycle-fsm.html</link>
      <pubDate>Mon, 26 Jan 2015 22:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/01/sequencer-design-8-cycle-fsm.html</guid>
      <description>So far I&amp;rsquo;ve got the design complete for the instruction register along with the initial design for the decoder and so I&amp;rsquo;m well on the way to having the computer perform MOV-8, ALU and SETAB instructions.</description>
    </item>
    
    <item>
      <title>Decoder Design: MOV-8, ALU &amp; SETAB </title>
      <link>https://relaycomputer.co.uk/2015/01/decoder-design-mov-8-alu-setab.html</link>
      <pubDate>Sun, 04 Jan 2015 22:12:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2015/01/decoder-design-mov-8-alu-setab.html</guid>
      <description>In my last post I introduced the design for the instruction register which holds the current 8-bit opcode that the computer is executing. The next card to design is the decoder which will take the 8-bit opcode and set either the MOV-8, ALU or SETAB control lines depending which class of instruction the opcode represents.</description>
    </item>
    
    <item>
      <title>Register Design: Instruction Register</title>
      <link>https://relaycomputer.co.uk/2014/12/register-design-instruction-register.html</link>
      <pubDate>Mon, 01 Dec 2014 21:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/12/register-design-instruction-register.html</guid>
      <description>Well, it&amp;rsquo;s fair to say that I rather underestimated just how much time decorating the new house would take up &amp;hellip; and that&amp;rsquo;s mainly because &amp;lsquo;decorating&amp;rsquo; included re-wiring, re-plumbing, re-plastering, re-carpeting &amp;hellip; all before I got anywhere near choosing a tasteful shade of emulsion for the walls.</description>
    </item>
    
    <item>
      <title>Sequencing &amp; Control Design: Overview</title>
      <link>https://relaycomputer.co.uk/2014/09/sequencing-control-design-overview.html</link>
      <pubDate>Fri, 19 Sep 2014 23:27:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/09/sequencing-control-design-overview.html</guid>
      <description>I&amp;rsquo;ve now got my computer to a state where I can perform ALU operations and push values around the four registers by manually operating the various control lines.</description>
    </item>
    
    <item>
      <title>ALU &amp; Registers A-D Test with new Display Cards</title>
      <link>https://relaycomputer.co.uk/2014/08/alu-registers-d-test-with-new-display.html</link>
      <pubDate>Tue, 19 Aug 2014 18:22:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/08/alu-registers-d-test-with-new-display.html</guid>
      <description>Now that the two display cards are complete enough to display and control the status of the ALU and four registers (A-D) it&amp;rsquo;s time to fit them to the upper enclosure.</description>
    </item>
    
    <item>
      <title>User Interface: Display B Initial Design and Construction</title>
      <link>https://relaycomputer.co.uk/2014/07/user-interface-display-b-initial-design.html</link>
      <pubDate>Sun, 20 Jul 2014 10:05:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/07/user-interface-display-b-initial-design.html</guid>
      <description>In my last post I put together the beginnings of the first display card &amp;hellip; named in a brilliant flash of nomenclature as display card A.</description>
    </item>
    
    <item>
      <title>User Interface: Display A Initial Design and Construction</title>
      <link>https://relaycomputer.co.uk/2014/07/user-interface-display-initial-design.html</link>
      <pubDate>Sat, 12 Jul 2014 10:31:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/07/user-interface-display-initial-design.html</guid>
      <description>Following on from working on the main data switches in my last post this time I&amp;rsquo;ve taken the first steps in designing and constructing the first of two display cards which will sit in the upper enclosure.</description>
    </item>
    
    <item>
      <title>User Interface: Data Switches</title>
      <link>https://relaycomputer.co.uk/2014/07/user-interface-data-switches.html</link>
      <pubDate>Sat, 05 Jul 2014 09:40:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/07/user-interface-data-switches.html</guid>
      <description>Now I&amp;rsquo;ve got a fully working ALU and four registers completed I want to take a short break from card building and turn my attention to making it easier to interact with the computer.</description>
    </item>
    
    <item>
      <title>Register Construction: Completed A and D 8-bit Registers Full Test</title>
      <link>https://relaycomputer.co.uk/2014/06/register-construction-completed-and-d-8.html</link>
      <pubDate>Sat, 28 Jun 2014 13:12:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/06/register-construction-completed-and-d-8.html</guid>
      <description>The A/D Register card is now complete and looks like this:
{% figure %} {% endfigure %}
As usual I&amp;rsquo;ve put a video together that demonstrates this card in operation.</description>
    </item>
    
    <item>
      <title>Register Construction: A and D 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/2014/06/register-construction-and-d-8-bit.html</link>
      <pubDate>Sun, 22 Jun 2014 18:35:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/06/register-construction-and-d-8-bit.html</guid>
      <description>I haven&amp;rsquo;t posted in nearly a month but in between bouts of enjoying the rare British sunshine I&amp;rsquo;ve been plodding away at the A/D register card and it&amp;rsquo;s now finally ready for testing.</description>
    </item>
    
    <item>
      <title>Register Construction: Completed B and C 8-bit Registers Full Test</title>
      <link>https://relaycomputer.co.uk/2014/05/register-construction-completed-b-and-c.html</link>
      <pubDate>Mon, 26 May 2014 09:59:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/register-construction-completed-b-and-c.html</guid>
      <description>The B/C Register card is now complete and looks like this:
{% figure %} {% endfigure %}
As usual I&amp;rsquo;ve put a video together which demonstrates this card in operation &amp;hellip; firstly on its own but then together with all the other cards constructed so far.</description>
    </item>
    
    <item>
      <title>Register Construction: B and C 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/2014/05/register-construction-b-and-c-8-bit.html</link>
      <pubDate>Sat, 24 May 2014 17:23:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/register-construction-b-and-c-8-bit.html</guid>
      <description>As mentioned in my last post I decided this time around not to post after each stage of card construction (being as the construction steps are now pretty similar to those for previous cards).</description>
    </item>
    
    <item>
      <title>Register Design: B and C 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/2014/05/register-design-b-and-c-8-bit-registers.html</link>
      <pubDate>Sun, 11 May 2014 10:08:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/register-design-b-and-c-8-bit-registers.html</guid>
      <description>In a recent post I put up the design for the A and D 8-bit register card &amp;hellip; the B and C register card is very similar in design but has the additional complexity that it has to directly feed the ALU.</description>
    </item>
    
    <item>
      <title>Enclosure Update: Magic Pen</title>
      <link>https://relaycomputer.co.uk/2014/05/enclosure-update-magic-pen.html</link>
      <pubDate>Sat, 10 May 2014 09:46:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/enclosure-update-magic-pen.html</guid>
      <description>Just need to quickly share my experience with what I&amp;rsquo;m dubbing the &amp;lsquo;magic pen&amp;rsquo; before I put up the B/C register schematics (yup, they&amp;rsquo;re finally ready).</description>
    </item>
    
    <item>
      <title>Enclosure Update: Fitting of Laser Cut Parts</title>
      <link>https://relaycomputer.co.uk/2014/05/enclosure-update-fitting-of-laser-cut.html</link>
      <pubDate>Mon, 05 May 2014 11:03:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/enclosure-update-fitting-of-laser-cut.html</guid>
      <description>I was going to spread the fitting of the laser cut parts to the lower enclosure over a couple of evenings but in a fit of geeky excitement I ended up doing it all in one evening.</description>
    </item>
    
    <item>
      <title>Enclosure Update: Laser Cut Parts Arrived</title>
      <link>https://relaycomputer.co.uk/2014/05/enclosure-update-laser-cut-parts-arrived.html</link>
      <pubDate>Sat, 03 May 2014 09:49:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/05/enclosure-update-laser-cut-parts-arrived.html</guid>
      <description>I&amp;rsquo;ve been looking forward to this moment for nearly a month &amp;hellip; the laser cut parts I ordered to move my enclosure construction forward have finally arrived.</description>
    </item>
    
    <item>
      <title>Register Design: Dual Output 8-bit Register</title>
      <link>https://relaycomputer.co.uk/2014/04/register-design-dual-output-8-bit.html</link>
      <pubDate>Thu, 24 Apr 2014 22:56:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/04/register-design-dual-output-8-bit.html</guid>
      <description>In the last post I introduced the design for the A/D register card (which as its name suggests contains the A and D 8-bit registers). I&amp;rsquo;m now making a start on the design for the B/C register card and although its pretty much the same as the A/D card there&amp;rsquo;s an extra complexity because the B/C registers additionally feed the ALU B and C inputs.</description>
    </item>
    
    <item>
      <title>Register Design: A and D 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/2014/04/register-design-and-d-8-bit-registers.html</link>
      <pubDate>Sun, 20 Apr 2014 11:15:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/04/register-design-and-d-8-bit-registers.html</guid>
      <description>In the last post I introduced the design for a general purpose 8-bit register. This post covers taking two of those registers along with status LEDs and gating relays to implement the full A and D registers.</description>
    </item>
    
    <item>
      <title>Register Design: General Purpose 8-bit Register</title>
      <link>https://relaycomputer.co.uk/2014/04/register-design-general-purpose-8-bit.html</link>
      <pubDate>Wed, 16 Apr 2014 22:08:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/04/register-design-general-purpose-8-bit.html</guid>
      <description>This post covers the design of a general purpose 8-bit register that can be loaded from the data bus and then selected back to the data bus at a later time.</description>
    </item>
    
    <item>
      <title>Enclosure Update: Laser Cutting</title>
      <link>https://relaycomputer.co.uk/2014/04/enclosure-update-laser-cutting.html</link>
      <pubDate>Thu, 10 Apr 2014 19:58:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/04/enclosure-update-laser-cutting.html</guid>
      <description>I couldn&amp;rsquo;t resist it any longer &amp;hellip; I&amp;rsquo;ve ordered the laser cut parts for the case doors, sides and bay floor/ceilings. I did say I&amp;rsquo;d wait for my chosen laser cut website to put out a free delivery offer but I ended up crumbling under the weight of my own impatience.</description>
    </item>
    
    <item>
      <title>Completed ALU</title>
      <link>https://relaycomputer.co.uk/2014/03/completed-alu.html</link>
      <pubDate>Sun, 30 Mar 2014 12:15:00 +0100</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/completed-alu.html</guid>
      <description>Following my last post on the completed backplane I&amp;rsquo;m now in a position to connect all the other completed cards together to test the full ALU.</description>
    </item>
    
    <item>
      <title>ALU Construction: Completed Backplane</title>
      <link>https://relaycomputer.co.uk/2014/03/alu-construction-completed-backplane.html</link>
      <pubDate>Wed, 26 Mar 2014 21:57:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/alu-construction-completed-backplane.html</guid>
      <description>In my last post I mentioned I&amp;rsquo;d suffered a bit of a set back with the construction of the ALU backplane. Well, the short version of things is that I&amp;rsquo;ve admitted defeat and constructed a new backplane using a different design &amp;hellip; it looks like this:</description>
    </item>
    
    <item>
      <title>Enclosure Initial Construction</title>
      <link>https://relaycomputer.co.uk/2014/03/enclosure-initial-construction.html</link>
      <pubDate>Sat, 22 Mar 2014 00:08:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/enclosure-initial-construction.html</guid>
      <description>I&amp;rsquo;ve been promising this post for quite a while now &amp;hellip; an update on how the enclosure construction is going. Well, it&amp;rsquo;s very good thanks :)</description>
    </item>
    
    <item>
      <title>ALU Construction: Completed Control Card Full Test</title>
      <link>https://relaycomputer.co.uk/2014/03/alu-construction-completed-control-card.html</link>
      <pubDate>Sun, 16 Mar 2014 08:59:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/alu-construction-completed-control-card.html</guid>
      <description>The ALU Control Card is now complete and looks like this:
{% figure %}{% endfigure %}
This card was, on the whole, much simpler and quicker to put together than previous cards (despite me initially messing up the zero detection relay positions).</description>
    </item>
    
    <item>
      <title>ALU Construction: Control Card Power Rails &amp; Wire Wrap</title>
      <link>https://relaycomputer.co.uk/2014/03/alu-construction-control-card-power.html</link>
      <pubDate>Fri, 14 Mar 2014 19:51:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/alu-construction-control-card-power.html</guid>
      <description>I&amp;rsquo;ve been a bit short of time lately so I&amp;rsquo;ve been working on the ALU Control Card in little bursts &amp;hellip; but after lots of these little bursts I&amp;rsquo;ve now got all the power rails and wire wrap done for this card.</description>
    </item>
    
    <item>
      <title>ALU Construction: Control Card Header Pins &amp; Relay Sockets</title>
      <link>https://relaycomputer.co.uk/2014/03/alu-construction-control-card-header.html</link>
      <pubDate>Tue, 04 Mar 2014 18:03:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/alu-construction-control-card-header.html</guid>
      <description>Following on from the first two successfully completed ALU cards, for logic and arithmetic, it&amp;rsquo;s time to make a start on the control card (well, actually, the LEDs and connectors are already done from earlier but you get the gist).</description>
    </item>
    
    <item>
      <title>Enclosure Disclosure</title>
      <link>https://relaycomputer.co.uk/2014/03/enclosure-disclosure.html</link>
      <pubDate>Sat, 01 Mar 2014 10:55:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/03/enclosure-disclosure.html</guid>
      <description>Sorry, I will try to rain in the terrible punning post titles.
This time I wanted to share the thoughts and ideas I&amp;rsquo;ve been having around building a case to hold my computer when it&amp;rsquo;s eventually complete.</description>
    </item>
    
    <item>
      <title>ALU Construction: Completed Arithmetic Card Full Test</title>
      <link>https://relaycomputer.co.uk/2014/02/alu-construction-completed-arithmetic.html</link>
      <pubDate>Sun, 23 Feb 2014 17:31:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/02/alu-construction-completed-arithmetic.html</guid>
      <description>The ALU arithmetic card is now complete! The final card looks like this:
{% figure %} {% endfigure %}
As I did for the ALU logic card before I&amp;rsquo;ve put the following YouTube video together which gives a walkthrough of the arithmetic card in operation &amp;hellip; and as before this one also has a narrative track delivered by my own fair gob.</description>
    </item>
    
    <item>
      <title>ALU Construction: Arithmetic Card Wire Wrap 2</title>
      <link>https://relaycomputer.co.uk/2014/02/alu-construction-arithmetic-card-wire_19.html</link>
      <pubDate>Wed, 19 Feb 2014 22:37:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/02/alu-construction-arithmetic-card-wire_19.html</guid>
      <description>I&amp;rsquo;ve managed to squeeze in a couple more wire wrapping sessions this week so in this post there&amp;rsquo;s a few photos of progress so far.</description>
    </item>
    
    <item>
      <title>ALU Construction: Arithmetic Card Wire Wrap 1</title>
      <link>https://relaycomputer.co.uk/2014/02/alu-construction-arithmetic-card-wire.html</link>
      <pubDate>Sun, 16 Feb 2014 10:04:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/02/alu-construction-arithmetic-card-wire.html</guid>
      <description>Fear not (just in case you were for some reason) all this talk of Sketchup and enclosures and so on hasn&amp;rsquo;t totally diverted me from the main task of constructing the ALU.</description>
    </item>
    
    <item>
      <title>Sketchy Diversion</title>
      <link>https://relaycomputer.co.uk/2014/02/sketchy-diversion.html</link>
      <pubDate>Tue, 04 Feb 2014 19:10:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/02/sketchy-diversion.html</guid>
      <description>I&amp;rsquo;m taking a break &amp;hellip; just a short one.
In between all the bouts of wire wrapping for the ALU arithmetic card I&amp;rsquo;m starting to think about enclosure options for the computer when it&amp;rsquo;s finally (finally!</description>
    </item>
    
    <item>
      <title>ALU Construction: Arithmetic Card Power Rails</title>
      <link>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-power.html</link>
      <pubDate>Sun, 26 Jan 2014 23:26:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-power.html</guid>
      <description>Another round of soldering done &amp;hellip; this time putting down the power rails on the arithmetic card along with some soldered wire links. This is the last of the soldering for this card - it&amp;rsquo;s all wire wrapping form hereon in.</description>
    </item>
    
    <item>
      <title>ALU Construction: 1-bit Arithmetic Full Construction</title>
      <link>https://relaycomputer.co.uk/2014/01/alu-construction-1-bit-arithmetic-full.html</link>
      <pubDate>Tue, 21 Jan 2014 18:25:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/01/alu-construction-1-bit-arithmetic-full.html</guid>
      <description>So, as mentioned in my last post this time I&amp;rsquo;ve put in the wire links and wraps needed to test the first bit of the arithmetic card.</description>
    </item>
    
    <item>
      <title>ALU Construction: Arithmetic Card Relay Sockets</title>
      <link>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-relay.html</link>
      <pubDate>Fri, 17 Jan 2014 23:23:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-relay.html</guid>
      <description>It&amp;rsquo;s always a fiddly job getting the relay sockets soldered in and the ALU arithmetic card proved no exception. With this in mind I&amp;rsquo;ve been spreading the work out over several mini sessions in accordance with my new post-Xmas lack of patience.</description>
    </item>
    
    <item>
      <title>ALU Construction: Arithmetic Card Header Pins</title>
      <link>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-header.html</link>
      <pubDate>Mon, 06 Jan 2014 22:18:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2014/01/alu-construction-arithmetic-card-header.html</guid>
      <description>Following on from the successful construction of the ALU logic card in my last post it&amp;rsquo;s time to start off the new year with the next ALU card (number 2 of 3 ALU cards in total) &amp;hellip; the arithmetic card.</description>
    </item>
    
    <item>
      <title>ALU Construction: Completed Logic Card Full Test</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-completed-logic-card.html</link>
      <pubDate>Wed, 18 Dec 2013 08:26:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-completed-logic-card.html</guid>
      <description>The ALU logic card is now finally complete! &amp;hellip; well, it is now I&amp;rsquo;ve popped the last few relays into their sockets. The final card looks like this:</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Wire Wrap 3</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-3.html</link>
      <pubDate>Wed, 18 Dec 2013 08:01:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-3.html</guid>
      <description>I&amp;rsquo;m now just one session of wire wrapping away from a completed ALU logic card. The final job is to wire up the gating relays that select one of the five logic results back on to the data bus.</description>
    </item>
    
    <item>
      <title>ALU Construction: 8-bit Logic Unit Tests</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-8-bit-logic-unit-tests.html</link>
      <pubDate>Thu, 12 Dec 2013 19:20:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-8-bit-logic-unit-tests.html</guid>
      <description>There&amp;rsquo;s now enough sockets, solder and wires to test all eight bits of the ALU logic card. This isn&amp;rsquo;t quite a full test as the gating relays that apply one of the results produced by each bit unit haven&amp;rsquo;t been wired up yet but there&amp;rsquo;s enough there to be able to set an input and see the results displayed on the LEDs along the front of the card.</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Wire Wrap 2</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-2.html</link>
      <pubDate>Thu, 12 Dec 2013 18:57:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-2.html</guid>
      <description>Continuing on with the wire wrapping for the ALU logic card next up is the input and result links:
{% figure %} {% endfigure %}</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Wire Wrap 1</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-1.html</link>
      <pubDate>Thu, 12 Dec 2013 18:41:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-wrap-1.html</guid>
      <description>Finally, with all the soldering now done, it&amp;rsquo;s time to set about wire wrapping the ALU logic card. First up is the internal connections within each logic bit:</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Power Rails</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-power-rails.html</link>
      <pubDate>Tue, 10 Dec 2013 22:56:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-power-rails.html</guid>
      <description>It seems that every time I move on to the next stage of construction on the ALU logic card it&amp;rsquo;s fiddlier than the stage before it &amp;hellip; this stage is no exception.</description>
    </item>
    
    <item>
      <title>Test Board: Construction</title>
      <link>https://relaycomputer.co.uk/2013/12/test-board-construction.html</link>
      <pubDate>Tue, 10 Dec 2013 07:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/test-board-construction.html</guid>
      <description>I&amp;rsquo;ve just realised that as I&amp;rsquo;ve been constructing the first ALU card I&amp;rsquo;ve not given much thought to how I&amp;rsquo;ll actually test the card (or other cards for that matter) when complete &amp;hellip; this post therefore represents a quick aside to tackle testing.</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Relay Sockets</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-relay.html</link>
      <pubDate>Mon, 09 Dec 2013 07:27:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-relay.html</guid>
      <description>The construction of the ALU logic card is coming along nicely but there&amp;rsquo;s still a lot of soldering ahead to get all the relay sockets down &amp;hellip; and this part is the fiddliest bit yet.</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Header Pins</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-header-pins.html</link>
      <pubDate>Sun, 08 Dec 2013 09:57:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-header-pins.html</guid>
      <description>Following on from the successful construction of the first bit on the ALU logic card in my last post it&amp;rsquo;s now time to start putting together the other 7 bits and the gating circuits (to place one of the logic results on to the data bus).</description>
    </item>
    
    <item>
      <title>ALU Construction: 1-bit Logic Full Construction</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-1-bit-logic-full.html</link>
      <pubDate>Sat, 07 Dec 2013 01:54:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-1-bit-logic-full.html</guid>
      <description>So, although I probably should construct the logic card methodically a full stage at a time (solder header pins then sockets then wire wrap) I can&amp;rsquo;t resist fully assembling a single bit alone to see if/how it works.</description>
    </item>
    
    <item>
      <title>ALU Construction: LED Tests</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-led-tests.html</link>
      <pubDate>Fri, 06 Dec 2013 20:55:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-led-tests.html</guid>
      <description>Following on from my last post I can now test the LEDs that have been soldered and hooked up to the header pins on each of the three ALU cards (Logic, Arithmetic and Control).</description>
    </item>
    
    <item>
      <title>ALU Construction: Logic Card Wire Links</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-links.html</link>
      <pubDate>Fri, 06 Dec 2013 20:51:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-logic-card-wire-links.html</guid>
      <description>Before I can test all of the LEDs laid down so far (to make sure they survived the heat of the soldering iron) I need to add some wire links on the logic card between the LED anodes and the header pins.</description>
    </item>
    
    <item>
      <title>ALU Construction: LED Header Pins</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-led-header-pins.html</link>
      <pubDate>Thu, 05 Dec 2013 21:46:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-led-header-pins.html</guid>
      <description>So far, in the construction of the three ALU cards (Logic, Arithmetic and Control) I&amp;rsquo;ve soldered down the connectors and LEDs. It&amp;rsquo;s now time to solder in some header pins and join them to the existing connectors and LEDs ready for wire-wrapping later.</description>
    </item>
    
    <item>
      <title>Backplane Design and Construction</title>
      <link>https://relaycomputer.co.uk/2013/12/backplane-design-and-construction.html</link>
      <pubDate>Tue, 03 Dec 2013 19:27:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/backplane-design-and-construction.html</guid>
      <description>Originally when I was thinking about how I&amp;rsquo;d connect up the various cards of this computer I had ribbon cables in mind. Ribbon cables are straightforward to use and physically flexible which would</description>
    </item>
    
    <item>
      <title>ALU Construction: Connectors and LEDs</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-construction-connectors-and-leds.html</link>
      <pubDate>Mon, 02 Dec 2013 18:05:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-construction-connectors-and-leds.html</guid>
      <description>As promised in my last post it&amp;rsquo;s finally time to get the soldering iron out and make a start on constructing the three cards that make up the ALU.</description>
    </item>
    
    <item>
      <title>ALU Design: Control Unit</title>
      <link>https://relaycomputer.co.uk/2013/12/alu-design-control-unit.html</link>
      <pubDate>Sun, 01 Dec 2013 21:21:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/12/alu-design-control-unit.html</guid>
      <description>In the last three posts I introduced the design for the 3-to-8 Function Decoder, Zero Detect circuit and the Condition Registers. In this post I&amp;rsquo;ll put all three of these components together to make up the ALU Control Card.</description>
    </item>
    
    <item>
      <title>ALU Design: Condition Registers</title>
      <link>https://relaycomputer.co.uk/2013/11/alu-design-condition-registers.html</link>
      <pubDate>Sat, 30 Nov 2013 10:12:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/alu-design-condition-registers.html</guid>
      <description>This post covers the design of the ALU Condition Registers which along with the 3-to-8 Function Decoder and Zero Detect circuit (both covered in my previous posts) make up the ALU Control Card.</description>
    </item>
    
    <item>
      <title>ALU Design: Zero Detect</title>
      <link>https://relaycomputer.co.uk/2013/11/alu-design-zero-detect.html</link>
      <pubDate>Sat, 23 Nov 2013 08:57:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/alu-design-zero-detect.html</guid>
      <description>This post covers the design of the Zero Detect circuit which along with the 3-to-8 Function Decoder (covered in my last post) and the Condition Registers (next post) make up the ALU Control Card.</description>
    </item>
    
    <item>
      <title>ALU Design: Function Decoder</title>
      <link>https://relaycomputer.co.uk/2013/11/design-function-decoder.html</link>
      <pubDate>Wed, 20 Nov 2013 22:18:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/design-function-decoder.html</guid>
      <description>This post covers the design of a 3-to-8 Function Decoder which along with the Zero Detect circuit and Condition Registers will all go in to the ALU Control Card.</description>
    </item>
    
    <item>
      <title>ALU Design: 8-bit Arithmetic Unit</title>
      <link>https://relaycomputer.co.uk/2013/11/design-8-bit-arithmetic-unit.html</link>
      <pubDate>Sun, 17 Nov 2013 10:43:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/design-8-bit-arithmetic-unit.html</guid>
      <description>In the last post I introduced the design for the 1-bit Arithmetic Unit. This post covers connecting eight of these units together to make an 8-bit Arithmetic Unit along with result gating and increment functionality.</description>
    </item>
    
    <item>
      <title>ALU Design: 1-bit Arithmetic Unit</title>
      <link>https://relaycomputer.co.uk/2013/11/design-1-bit-arithmetic-unit.html</link>
      <pubDate>Fri, 15 Nov 2013 22:33:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/design-1-bit-arithmetic-unit.html</guid>
      <description>This post covers the design of a 1-bit Arithmetic Unit that can add two input bits together (B and C) with carry in and out. Here&amp;rsquo;s a schematic of the 1-bit Arithmetic Unit (based directly on the one used in the Harry Porter Relay Computer):</description>
    </item>
    
    <item>
      <title>ALU Design: 8-bit Logic Unit</title>
      <link>https://relaycomputer.co.uk/2013/11/design-8-bit-logic-unit.html</link>
      <pubDate>Wed, 13 Nov 2013 22:42:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/design-8-bit-logic-unit.html</guid>
      <description>In the last post I introduced the design for a 1-bit Logic Unit. This post covers the design effort to cram 8 of these on to a single pad board complete with connectors, status LEDs and gating relays thereby forming a complete 8-bit Logic Unit.</description>
    </item>
    
    <item>
      <title>ALU Design: 1-bit Logic Unit</title>
      <link>https://relaycomputer.co.uk/2013/11/design-1-bit-logic-unit.html</link>
      <pubDate>Mon, 11 Nov 2013 23:32:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/design-1-bit-logic-unit.html</guid>
      <description>This post covers the design of a 1-bit Logic Unit that can produce AND, OR, XOR, NOT and SHL (Shift Left) outputs from two input bits B and C.</description>
    </item>
    
    <item>
      <title>Relay Rumination</title>
      <link>https://relaycomputer.co.uk/2013/11/relay-rumination.html</link>
      <pubDate>Sun, 10 Nov 2013 23:16:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/relay-rumination.html</guid>
      <description>If there&amp;rsquo;s one thing a relay computer needs a lot of it&amp;rsquo;s &amp;hellip; erm &amp;hellip; relays (of course) &amp;hellip; which happens to be a bit unfortunate as relays, compared to the other parts of the computer, are rather expensive.</description>
    </item>
    
    <item>
      <title>Instruction Set</title>
      <link>https://relaycomputer.co.uk/2013/11/instruction-set.html</link>
      <pubDate>Thu, 07 Nov 2013 23:47:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/instruction-set.html</guid>
      <description>In the last post I promised to reveal the planned instruction set for the computer and [here it is]({% link /assets/pdf/instruction-set.pdf %}) (pdf file).
This should be viewed alongside the architecture diagram which can be found in my previous architecture posts &amp;hellip; and to be fair if you&amp;rsquo;ve been following along through my recent posts then just close your eyes &amp;hellip; you&amp;rsquo;ll probably find it&amp;rsquo;s been burnt on to your eye balls given the amount of times I&amp;rsquo;ve posted it ;)</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Programming and Control 2</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and_7.html</link>
      <pubDate>Thu, 07 Nov 2013 23:22:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and_7.html</guid>
      <description>So, the last post didn&amp;rsquo;t quite wrap up this &amp;lsquo;mini-series&amp;rsquo; but hopefully this one will. Continuing on with how the Programming and Control of the computer happens here again, for the last time (really last time), is the architecture I&amp;rsquo;ll be building against (from the Harry Porter Relay Computer)</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Programming and Control</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and.html</link>
      <pubDate>Thu, 07 Nov 2013 21:54:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-programming-and.html</guid>
      <description>In this post I&amp;rsquo;ll wrap up this &amp;lsquo;mini-series&amp;rsquo; of trying to explain away the various bits of the architecture that will make up my relay computer project — finally now we come on to Programming and Control of the computer.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: the ALU</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-alu.html</link>
      <pubDate>Thu, 07 Nov 2013 07:24:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-alu.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s the Arithmetic Logic Unit (ALU).</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Memory</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-memory.html</link>
      <pubDate>Wed, 06 Nov 2013 20:14:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-memory.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s the memory.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Buses and Registers</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-buses-and.html</link>
      <pubDate>Tue, 05 Nov 2013 19:07:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-buses-and.html</guid>
      <description>In this post I&amp;rsquo;ll continue to try and explain away the various bits of the architecture that will make up my relay computer project — this time it&amp;rsquo;s buses and registers.</description>
    </item>
    
    <item>
      <title>Architectural breakdown: Binary</title>
      <link>https://relaycomputer.co.uk/2013/11/architectural-breakdown-binary.html</link>
      <pubDate>Mon, 04 Nov 2013 10:35:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architectural-breakdown-binary.html</guid>
      <description>&amp;hellip; and it all begins with binary. Binary is a &amp;lsquo;base 2&amp;rsquo; numbering system which means it uses the numbers 0 and 1. In contrast humans tend to use decimal (base 10) for their day-to-day numerical needs which, of course, uses the numbers 0 to 9.</description>
    </item>
    
    <item>
      <title>Architecture isn&#39;t just for houses</title>
      <link>https://relaycomputer.co.uk/2013/11/architecture-isnt-just-for-houses.html</link>
      <pubDate>Mon, 04 Nov 2013 08:51:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/architecture-isnt-just-for-houses.html</guid>
      <description>So, with the scene now set (see previous posts) let&amp;rsquo;s dive right in and take a look at the system architecture I&amp;rsquo;ll be building my computer upon &amp;hellip; here it is &amp;hellip;</description>
    </item>
    
    <item>
      <title>The three Rs</title>
      <link>https://relaycomputer.co.uk/2013/11/the-three-rs.html</link>
      <pubDate>Sun, 03 Nov 2013 09:35:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/the-three-rs.html</guid>
      <description>It strikes me that when embarking on a project like this there&amp;rsquo;s three things that are of uttermost importance, the three Rs if you will:</description>
    </item>
    
    <item>
      <title>Why?</title>
      <link>https://relaycomputer.co.uk/2013/11/why.html</link>
      <pubDate>Sat, 02 Nov 2013 10:46:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/11/why.html</guid>
      <description>Whenever I tell people I&amp;rsquo;m building a relay computer the overwhelming response is &amp;hellip; why on Earth would you want to do that?! Or alternatively, as a work colleague delicately put it to me yesterday, if you go to the front of your house there&amp;rsquo;s a big block of wood that opens — it&amp;rsquo;s called a door — if you go through it you&amp;rsquo;ll discover pubs and things.</description>
    </item>
    
    <item>
      <title>It begins</title>
      <link>https://relaycomputer.co.uk/2013/10/it-begins.html</link>
      <pubDate>Thu, 31 Oct 2013 22:21:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/2013/10/it-begins.html</guid>
      <description>&amp;hellip; although being as I&amp;rsquo;m already a couple of months in on my little project then perhaps that should be &amp;lsquo;it began&amp;rsquo;.
If I do see this project all the way through to the end, and I&amp;rsquo;ve plenty of half finished projects littering the place by the way, then I&amp;rsquo;ll have created an 8 bit computer from scratch.</description>
    </item>
    
    <item>
      <title>ALU Summary</title>
      <link>https://relaycomputer.co.uk/pages/alu.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/alu.html</guid>
      <description>The Arithmetic Logic Unit (ALU) is split into three units (and also three physical cards): the logic unit, the arithmetic unit and the control unit. The logic and arithmetic cards handle 8-bit logic and arithmetic functions respectively.</description>
    </item>
    
    <item>
      <title>Assembly</title>
      <link>https://relaycomputer.co.uk/pages/assembly.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/assembly.html</guid>
      <description>Although the computer is primarily controlled by a set of 8-bit opcodes these can be tricky to work with when designing more complicated programs. As with many computers we can use a higher-level language which is more readable for a human but then will need converting into 8-bit opcodes for the computer to understand.</description>
    </item>
    
    <item>
      <title>Control Summary</title>
      <link>https://relaycomputer.co.uk/pages/control.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/control.html</guid>
      <description>The computer is controlled by a series of instructions held in memory (a computer program) that are loaded into the instruction register one at a time and executed.</description>
    </item>
    
    <item>
      <title>Enclosure Summary</title>
      <link>https://relaycomputer.co.uk/pages/enclosure.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/enclosure.html</guid>
      <description>The enclosure for the computer is based on an aluminium profile frame with laser cut acrylic and plywood panelling. The original design was put together in the excellent SketchUp software before ordering the parts and moving on to the physical construction.</description>
    </item>
    
    <item>
      <title>Instructions</title>
      <link>https://relaycomputer.co.uk/pages/instructions.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/instructions.html</guid>
      <description>The computer is controlled by a series of instructions held in memory (a computer program) that are loaded into the instruction register one at a time and executed.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>https://relaycomputer.co.uk/pages/overview.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/overview.html</guid>
      <description>This blog documents my journey in constructing an 8-bit relay computer, from scratch, made from tons of solder, wires, lights, relays, sweat, tears, swearing and money.</description>
    </item>
    
    <item>
      <title>Progress Summary</title>
      <link>https://relaycomputer.co.uk/pages/progress.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/progress.html</guid>
      <description>{% include pages-progresssection.html title=&#34;Bay W&#34; %} {% include pages-progressblock.html title=&#34;Backplane W&#34; state=&#34;Complete&#34; summary=&#34;enclosure&#34; tmbsch=&#34;alu-0006.png&#34; flssch=&#34;alu-1006.png&#34; tmbpto=&#34;alu-0007.jpg&#34; flspto=&#34;alu-1007.jpg&#34; %} {% include pages-progressblock.html title=&#34;Decoder&#34; version=&#34;2&#34; state=&#34;Complete&#34; summary=&#34;</description>
    </item>
    
    <item>
      <title>Registers Summary</title>
      <link>https://relaycomputer.co.uk/pages/registers.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/registers.html</guid>
      <description>The computer has eight general purpose 8-bit registers named A, B, C, D, M1, M2, X and Y. Although each can be used generally some of the registers have additional specific uses.</description>
    </item>
    
    <item>
      <title>UI Summary</title>
      <link>https://relaycomputer.co.uk/pages/ui.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://relaycomputer.co.uk/pages/ui.html</guid>
      <description>The computer&amp;rsquo;s user interface is comprised of two display cards (A and B) and then a row of data and control switches. Display A shows the state of the various control signals and allows the user to manually set those signals when the computer is placed in the &amp;lsquo;diagnostic mode&amp;rsquo;.</description>
    </item>
    
  </channel>
</rss>
