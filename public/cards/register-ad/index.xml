<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Register A/D on Relay Computer</title>
    <link>https://relaycomputer.co.uk/cards/register-ad/</link>
    <description>Recent content in Register A/D on Relay Computer</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 28 Jun 2014 13:12:00 +0100</lastBuildDate>
    <atom:link href="https://relaycomputer.co.uk/cards/register-ad/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Register Construction: Completed A and D 8-bit Registers Full Test</title>
      <link>https://relaycomputer.co.uk/posts/2014/06/register-construction-completed-and-d-8/</link>
      <pubDate>Sat, 28 Jun 2014 13:12:00 +0100</pubDate>
      <guid>https://relaycomputer.co.uk/posts/2014/06/register-construction-completed-and-d-8/</guid>
      <description>The A/D Register card is now complete and looks like this:
As usual I’ve put a video together that demonstrates this card in operation. This time I don’t show testing the card on its own as the A/D register is pretty much the same as the B/C register shown last time around … needless to say I did test the card fully off camera and everything worked fine (first time believe it or not). As I’ve now got the three ALU cards and four registers I’m finally able to perform multiple operations and accumulate the result. I demonstrate this in the video by performing a series of arithmetic operations by hand.</description>
    </item>
    <item>
      <title>Register Construction: A and D 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/posts/2014/06/register-construction-and-d-8-bit/</link>
      <pubDate>Sun, 22 Jun 2014 18:35:00 +0100</pubDate>
      <guid>https://relaycomputer.co.uk/posts/2014/06/register-construction-and-d-8-bit/</guid>
      <description>I haven’t posted in nearly a month but in between bouts of enjoying the rare British sunshine I’ve been plodding away at the A/D register card and it’s now finally ready for testing. The A/D register card is effectively a slightly simplified version of the previously covered B/C card and so a lot of the content in this post is going to be pretty similar. Despite this though I’ll go through all the steps taken to construct the A/D register card for the sake of completness … primarily in photos and then with extra text where anything odd or different came up compared with the B/C card.</description>
    </item>
    <item>
      <title>Register Design: A and D 8-bit Registers</title>
      <link>https://relaycomputer.co.uk/posts/2014/04/register-design-and-d-8-bit-registers/</link>
      <pubDate>Sun, 20 Apr 2014 11:15:00 +0100</pubDate>
      <guid>https://relaycomputer.co.uk/posts/2014/04/register-design-and-d-8-bit-registers/</guid>
      <description>In the last post I introduced the design for a general purpose 8-bit register. This post covers taking two of those registers along with status LEDs and gating relays to implement the full A and D registers.
So, diving straight in, here is what the main bit relays look like for the two 8-bit registers when placed on the usual 55 x 40 hole pad board (excluding wire links):
2 x 8 bit register relays (larger) Each of the relays above stores a single 1-bit value so there’s 16-bits worth in total (which could all be used together if we were making a 16-bit register) or two lots of 8-bits (for our two 8-bit registers). Each of the 1-bit register relays need gating to and from the data bus so that the values stored don’t conflict with any other value on the data bus. With these additional control and gating relays added we get the following (this time including internal wire links in the 1-bit register relays and result links between the 1-bit register relays and the gating relays):</description>
    </item>
    <item>
      <title>Register Design: General Purpose 8-bit Register</title>
      <link>https://relaycomputer.co.uk/posts/2014/04/register-design-general-purpose-8-bit/</link>
      <pubDate>Wed, 16 Apr 2014 22:08:00 +0100</pubDate>
      <guid>https://relaycomputer.co.uk/posts/2014/04/register-design-general-purpose-8-bit/</guid>
      <description>This post covers the design of a general purpose 8-bit register that can be loaded from the data bus and then selected back to the data bus at a later time. This permits temporary storage of 8-bit values whilst performing various operations, for example, ALU functions. This post goes back over some of the ground already covered by the design of the condition registers which are a slightly simplified version of the registers detailed here.</description>
    </item>
  </channel>
</rss>
